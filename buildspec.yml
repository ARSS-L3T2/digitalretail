version: 0.2

env:
  parameter-store:
    SECRET_KEY: /l3t2/SECRET_KEY
    POSTGRES_URL: /l3t2/POSTGRES_URL
    POSTGRES_USER: /l3t2/POSTGRES_USER
    POSTGRES_PW: /l3t2/POSTGRES_PW
    POSTGRES_DB: /l3t2/POSTGRES_DB
    STRIPE_PUBLISHABLE_KEY: /l3t2/STRIPE_PUBLISHABLE_KEY
    STRIPE_SECRET_KEY: /l3t2/STRIPE_SECRET_KEY
    FB_CLIENT_ID: /l3t2/FB_CLIENT_ID
    FB_CLIENT_SECRET: /l3t2/FB_CLIENT_SECRET

phases: 
    pre_build:
        commands: 
            - echo "we are in the pre build phase"
            - echo Logging in to Amazon ECR...
            - $(aws ecr get-login --no-include-email --region $REGION)
            - REPOSITORY_URI=$AWS_ID.dkr.ecr.$REGION.amazonaws.com/$REPO
            - pip install --upgrade pip
            - pip install -r requirements.txt
            - python server/tests/test.py 
    build:
        commands:
            - echo "we are in the build phase"
            - echo Build started on `date`
            - echo Building the Docker image...          
            - docker build -t $REPO:$TAG .
            - docker tag $REPO:$TAG $REPOSITORY_URI:$TAG
    post_build:
        commands:
            - echo "we are in the post build phase"
            - echo Build completed on `date`
            - echo Pushing the Docker image...
            - docker push $REPOSITORY_URI:$TAG
            - printf '{"imageUri":"%s"}' $AWS_ID.dkr.ecr.$REGION.amazonaws.com/$REPO:$TAG > imagedefinitions.json
            - echo Container image to be used $REPOSITORY_URI:$TAG
            - sed -i 's@REPOSITORY_URI@'$REPOSITORY_URI'@g' taskdef.json       
            - sed -i 's@TAG@'$TAG'@g' taskdef.json
            - sed -i 's@TASK_FAMILY@'$TASK_FAMILY'@g' taskdef.json
            - echo update the task definition in appspec.yaml...
            - sed -i 's@TASK_DEF@'$TASK_DEF'@g' appspec.yaml
artifacts:
    files: 
    - "imagedefinitions.json"
    - "appspec.yaml"
    - "taskdef.json"
            
